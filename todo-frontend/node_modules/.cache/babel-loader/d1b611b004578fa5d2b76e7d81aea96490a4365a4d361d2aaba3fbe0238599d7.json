{"ast":null,"code":"var _jsxFileName = \"/Users/divijmanik/Desktop/ReactJS/to-do-list-MERN/todo-frontend/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport './App.css';\nimport { useEffect, useState } from 'react';\n\n//IMAGES\nimport DeleteImg from './Images/Delete.svg';\n// API url ->\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:3001/todos';\nasync function GetToDoList({\n  setTodoData\n}) {\n  const response = await fetch(API_URL);\n  const data = await response.json();\n  setTodoData(data);\n}\n_c = GetToDoList;\nfunction App() {\n  _s();\n  const [todoData, setTodoData] = useState([]);\n  useEffect(() => {\n    //fetchData();\n    GetToDoList({\n      setTodoData\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), todoData.map(todo_ => /*#__PURE__*/_jsxDEV(ToDo, {\n      data: todo_\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this)), /*#__PURE__*/_jsxDEV(CreateToDo, {\n      setTodoData: setTodoData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mJ0C+biC/MnWELGmlxkuJ7IP/tQ=\");\n_c2 = App;\nfunction ToDo({\n  data\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoParent\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: data.todo.done === true ? true : false,\n        onChange: e => EditToDo(data._id, e.target.checked, data.todo.desc),\n        className: \"Todo_Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"Todo_Title\",\n        children: data.todo.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"DeleteTodo\",\n        onClick: () => DeleteToDo(data._id),\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: DeleteImg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 79\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n// Post new ToDo\n_c3 = ToDo;\nfunction CreateToDo({\n  setTodoData\n}) {\n  _s2();\n  const [todoDesc, setTodoDesc] = useState(\"\");\n  const [todoDone, setTodoDone] = useState(false);\n  async function OnClickPost() {\n    if (todoDesc === null || todoDesc === \"\") return;\n\n    // Post Api\n    await fetch(API_URL, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"todo\": {\n          \"done\": todoDone,\n          \"desc\": todoDesc\n        }\n      })\n    });\n\n    // Make input fields empty\n    setTodoDesc(\"\");\n    setTodoDone(false);\n    GetToDoList({\n      setTodoData\n    });\n  }\n\n  // HTML - for posting new To-Do\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoParent\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"CreateTodo_Done\",\n        checked: todoDone,\n        onChange: e => {\n          setTodoDone(e.target.checked);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Write ToDo\",\n        className: \"CreateTodo_Desc\",\n        value: todoDesc,\n        onChange: e => {\n          setTodoDesc(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => OnClickPost(),\n        children: \"POST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n// Edit Todo - check/ Uncheck\n// description can also be changed\n_s2(CreateToDo, \"Pf5hqRv3GZBZlW8+GKW0D4sOYNI=\");\n_c4 = CreateToDo;\nfunction EditToDo(id, todoDone, todoDesc) {\n  // Put Api\n  fetch(API_URL + \"?id=\" + id, {\n    method: 'PUT',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"todo\": {\n        \"done\": todoDone,\n        \"desc\": todoDesc\n      }\n    })\n  });\n}\n\n// Delete ToDo using id\n_c5 = EditToDo;\nasync function DeleteToDo({\n  setTodoData\n}, id) {\n  // Delete Api\n  await fetch(API_URL + \"?id=\" + id, {\n    method: 'DELETE'\n  });\n\n  // Get list again\n  GetToDoList({\n    setTodoData\n  });\n}\n_c6 = DeleteToDo;\nexport default App;\n\n// End\n\n// Unused code\n\n// Alternate way of calling function\n// const fetchData = async () => {\n//   const response = await fetch(API_URL);\n//   const data = await response.json();\n\n//   setTodoData(data);\n// }\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"GetToDoList\");\n$RefreshReg$(_c2, \"App\");\n$RefreshReg$(_c3, \"ToDo\");\n$RefreshReg$(_c4, \"CreateToDo\");\n$RefreshReg$(_c5, \"EditToDo\");\n$RefreshReg$(_c6, \"DeleteToDo\");","map":{"version":3,"names":["useEffect","useState","DeleteImg","jsxDEV","_jsxDEV","API_URL","GetToDoList","setTodoData","response","fetch","data","json","_c","App","_s","todoData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","todo_","ToDo","CreateToDo","_c2","type","defaultChecked","todo","done","onChange","e","EditToDo","_id","target","checked","desc","onClick","DeleteToDo","src","_c3","_s2","todoDesc","setTodoDesc","todoDone","setTodoDone","OnClickPost","method","headers","body","JSON","stringify","placeholder","value","_c4","id","_c5","_c6","$RefreshReg$"],"sources":["/Users/divijmanik/Desktop/ReactJS/to-do-list-MERN/todo-frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react'\n\n//IMAGES\nimport DeleteImg from './Images/Delete.svg';\n// API url ->\nconst API_URL = 'http://localhost:3001/todos';\n\nasync function GetToDoList({ setTodoData }) {\n  const response = await fetch(API_URL);\n  const data = await response.json();\n\n  setTodoData(data);\n}\n\nfunction App() {\n  const [todoData, setTodoData] = useState([]);\n\n\n\n  useEffect(() => {\n    //fetchData();\n    GetToDoList({ setTodoData });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <br />\n      {\n        todoData.map((todo_) =>\n          (<ToDo data={todo_} />)\n        )\n      }\n\n      {/* Post new ToDo */}\n      <CreateToDo setTodoData={setTodoData} />\n    </div>\n  );\n}\n\nfunction ToDo({ data }) {\n  return (\n    <div className='TodoParent'>\n      <div className='Todo'>\n        <input type='checkbox' defaultChecked={data.todo.done === true ? true : false} onChange={(e) => EditToDo(data._id, e.target.checked, data.todo.desc)} className='Todo_Done'></input>\n        <h3 className='Todo_Title'>{data.todo.desc}</h3>\n\n        <button className='DeleteTodo' onClick={() => DeleteToDo(data._id)} > <img src={DeleteImg}></img> </button>\n      </div>\n    </div>\n  )\n}\n\n// Post new ToDo\nfunction CreateToDo({ setTodoData }) {\n  const [todoDesc, setTodoDesc] = useState(\"\");\n  const [todoDone, setTodoDone] = useState(false);\n\n  async function OnClickPost() {\n\n    if (todoDesc === null || todoDesc === \"\")\n      return;\n\n    // Post Api\n    await fetch(API_URL, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        \"todo\": {\n          \"done\": todoDone,\n          \"desc\": todoDesc\n        }\n      })\n    })\n\n    // Make input fields empty\n    setTodoDesc(\"\")\n    setTodoDone(false)\n\n    GetToDoList({ setTodoData });\n  }\n\n  // HTML - for posting new To-Do\n  return (\n    <div className='TodoParent'>\n      <div className='Todo'>\n        <input type='checkbox' className='CreateTodo_Done' checked={todoDone} onChange={(e) => { setTodoDone(e.target.checked) }}></input>\n\n        <input placeholder='Write ToDo' className='CreateTodo_Desc' value={todoDesc} onChange={(e) => { setTodoDesc(e.target.value) }}></input>\n\n        <button onClick={() => OnClickPost()}>POST</button>\n      </div>\n    </div>\n  )\n}\n\n// Edit Todo - check/ Uncheck\n// description can also be changed\n\nfunction EditToDo(id, todoDone, todoDesc) {\n\n  // Put Api\n  fetch(API_URL + \"?id=\" + id, {\n    method: 'PUT',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      \"todo\": {\n        \"done\": todoDone,\n        \"desc\": todoDesc\n      }\n    })\n  })\n}\n\n// Delete ToDo using id\nasync function DeleteToDo({ setTodoData }, id) {\n\n  // Delete Api\n  await fetch(API_URL + \"?id=\" + id, {\n    method: 'DELETE'\n  })\n\n  // Get list again\n  GetToDoList({ setTodoData });\n}\n\nexport default App;\n\n// End\n\n\n\n\n\n\n\n\n\n\n// Unused code\n\n// Alternate way of calling function\n// const fetchData = async () => {\n//   const response = await fetch(API_URL);\n//   const data = await response.json();\n\n//   setTodoData(data);\n// }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}